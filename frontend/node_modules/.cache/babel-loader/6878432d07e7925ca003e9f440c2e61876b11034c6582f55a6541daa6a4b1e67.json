{"ast":null,"code":"var _jsxFileName = \"E:\\\\Django\\\\reacttttt\\\\frontend\\\\src\\\\pages\\\\NotePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { ReactComponent as ArrowLeft } from '../assets/arrow-left.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotePage = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [note, setNote] = useState(null);\n  useEffect(() => {\n    getNote();\n  });\n  const getNote = async () => {\n    try {\n      const response = await fetch(`/api/notes/${id}`);\n      if (response.ok) {\n        const data = await response.json();\n        setNote(data);\n      } else {\n        console.error('Failed to fetch note data');\n      }\n    } catch (error) {\n      console.error('Error while fetching note data:', error);\n    }\n  };\n  let updateNote = async () => {\n    fetch(`/api/notes/$${id}/update`, {\n      m\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: /*#__PURE__*/_jsxDEV(ArrowLeft, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      onChange: e => {\n        setNote({\n          ...note,\n          'body': e.target.value\n        });\n      },\n      defaultValue: note === null || note === void 0 ? void 0 : note.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(NotePage, \"FZmJwUsRzUeEJamifUZk/E/moNU=\", false, function () {\n  return [useParams];\n});\n_c = NotePage;\nexport default NotePage;\nvar _c;\n$RefreshReg$(_c, \"NotePage\");","map":{"version":3,"names":["React","useState","useEffect","Link","useParams","ReactComponent","ArrowLeft","jsxDEV","_jsxDEV","NotePage","_s","id","note","setNote","getNote","response","fetch","ok","data","json","console","error","updateNote","m","className","children","to","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","defaultValue","body","_c","$RefreshReg$"],"sources":["E:/Django/reacttttt/frontend/src/pages/NotePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport {ReactComponent as ArrowLeft } from '../assets/arrow-left.svg'\r\n\r\nconst NotePage = () => {\r\n    const { id } = useParams();\r\n    const [note, setNote] = useState(null);\r\n    useEffect(() => {\r\n        getNote();\r\n      });  \r\n      \r\n      const getNote = async () => {\r\n        try {\r\n          const response = await fetch(`/api/notes/${id}`);\r\n          if (response.ok) {\r\n            const data = await response.json();\r\n            setNote(data);\r\n          } else {\r\n            console.error('Failed to fetch note data');\r\n          }\r\n        } catch (error) {\r\n          console.error('Error while fetching note data:', error);\r\n        }\r\n      };\r\n\r\n      let updateNote = async () => {\r\n        fetch(`/api/notes/$${id}/update`, {\r\n            m\r\n        })\r\n      }\r\n\r\n  return (\r\n    <div className='note'>\r\n        <div className='note-header'>\r\n            <h3>\r\n                <Link to =\"/\">\r\n                    <ArrowLeft/>\r\n                </Link>\r\n                </h3>\r\n        </div>\r\n        <textarea onChange={(e) => {setNote({...note,'body':e.target.value})}} defaultValue={note?.body}></textarea>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NotePage"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,SAAS,QAAQ,kBAAkB;AAClD,SAAQC,cAAc,IAAIC,SAAS,QAAQ,0BAA0B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErE,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM;IAAEC;EAAG,CAAC,GAAGP,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACtCC,SAAS,CAAC,MAAM;IACZY,OAAO,CAAC,CAAC;EACX,CAAC,CAAC;EAEF,MAAMA,OAAO,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,cAAaL,EAAG,EAAC,CAAC;MAChD,IAAII,QAAQ,CAACE,EAAE,EAAE;QACf,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;QAClCN,OAAO,CAACK,IAAI,CAAC;MACf,CAAC,MAAM;QACLE,OAAO,CAACC,KAAK,CAAC,2BAA2B,CAAC;MAC5C;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACzD;EACF,CAAC;EAED,IAAIC,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3BN,KAAK,CAAE,eAAcL,EAAG,SAAQ,EAAE;MAC9BY;IACJ,CAAC,CAAC;EACJ,CAAC;EAEL,oBACEf,OAAA;IAAKgB,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACjBjB,OAAA;MAAKgB,SAAS,EAAC,aAAa;MAAAC,QAAA,eACxBjB,OAAA;QAAAiB,QAAA,eACIjB,OAAA,CAACL,IAAI;UAACuB,EAAE,EAAE,GAAG;UAAAD,QAAA,eACTjB,OAAA,CAACF,SAAS;YAAAqB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,eACNtB,OAAA;MAAUuB,QAAQ,EAAGC,CAAC,IAAK;QAACnB,OAAO,CAAC;UAAC,GAAGD,IAAI;UAAC,MAAM,EAACoB,CAAC,CAACC,MAAM,CAACC;QAAK,CAAC,CAAC;MAAA,CAAE;MAACC,YAAY,EAAEvB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEwB;IAAK;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAW,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3G,CAAC;AAEV,CAAC;AAAApB,EAAA,CAvCKD,QAAQ;EAAA,QACKL,SAAS;AAAA;AAAAiC,EAAA,GADtB5B,QAAQ;AAyCd,eAAeA,QAAQ;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}