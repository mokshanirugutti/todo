{"ast":null,"code":"var _jsxFileName = \"E:\\\\Django\\\\reacttttt\\\\frontend\\\\src\\\\pages\\\\NotesListPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotesListPage = () => {\n  _s();\n  let [notes, setNotes] = useState([]);\n  useEffect(() => {});\n  let getNotes = async () => {\n    let response = await fetch('http://127.0.0.1:8000/api/notes');\n    let data = await response.json();\n    setNotes(data);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: notes.map((notes, index) => {\n        /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"/.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(NotesListPage, \"NIftjk3oeo0CYYZWCQZt9Dv4Mb4=\");\n_c = NotesListPage;\nexport default NotesListPage;\nvar _c;\n$RefreshReg$(_c, \"NotesListPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","NotesListPage","_s","notes","setNotes","getNotes","response","fetch","data","json","children","map","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Django/reacttttt/frontend/src/pages/NotesListPage.js"],"sourcesContent":["import React ,{useState,useEffect} from 'react'\r\n\r\nconst NotesListPage = () => {\r\n\r\n    let [notes,setNotes] = useState([])\r\n\r\n    useEffect(()=>{\r\n        \r\n    })\r\n\r\n    let getNotes = async () => {\r\n       let response = await fetch('http://127.0.0.1:8000/api/notes')\r\n       let data = await response.json()\r\n       setNotes(data)\r\n\r\n    }\r\n  return (\r\n    <div>\r\n        <div>\r\n            {notes.map((notes,index) => {\r\n                <h3>/.</h3>\r\n            })}\r\n        </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NotesListPage"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAACC,SAAS,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAExB,IAAI,CAACC,KAAK,EAACC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEnCC,SAAS,CAAC,MAAI,CAEd,CAAC,CAAC;EAEF,IAAIO,QAAQ,GAAG,MAAAA,CAAA,KAAY;IACxB,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,CAAC;IAC7D,IAAIC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAChCL,QAAQ,CAACI,IAAI,CAAC;EAEjB,CAAC;EACH,oBACER,OAAA;IAAAU,QAAA,eACIV,OAAA;MAAAU,QAAA,EACKP,KAAK,CAACQ,GAAG,CAAC,CAACR,KAAK,EAACS,KAAK,KAAK;QACxB,aAAAZ,OAAA;UAAAU,QAAA,EAAI;QAAE;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MACf,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEL,CAAC;AAEV,CAAC;AAAAd,EAAA,CAxBKD,aAAa;AAAAgB,EAAA,GAAbhB,aAAa;AA0BnB,eAAeA,aAAa;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}