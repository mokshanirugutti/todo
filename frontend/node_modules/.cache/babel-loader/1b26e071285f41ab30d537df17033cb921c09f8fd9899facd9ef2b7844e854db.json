{"ast":null,"code":"var _jsxFileName = \"E:\\\\Django\\\\reacttttt\\\\frontend\\\\src\\\\pages\\\\NotePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { ReactComponent as ArrowLeft } from '../assets/arrow-left.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotePage = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [note, setNote] = useState(null);\n  const history = useNavigate();\n  useEffect(() => {\n    getNote();\n  }, []);\n  const getNote = async () => {\n    if (id === 'new') return;\n    try {\n      const response = await fetch(`/api/notes/${id}`);\n      if (response.ok) {\n        const data = await response.json();\n        setNote(data);\n      } else {\n        console.error('Failed to fetch note data');\n      }\n    } catch (error) {\n      console.error('Error while fetching note data:', error);\n    }\n  };\n  let updateNote = async () => {\n    fetch(`/api/notes/${id}/update/`, {\n      method: 'PUT',\n      headers: {\n        'content-Type': 'application/json'\n      },\n      body: JSON.stringify(note)\n    });\n  };\n  let deleteNote = async () => {\n    fetch(`/api/notes/${id}/delete/`, {\n      method: 'DELETE',\n      'headers ': {\n        'content-Type': 'application/json'\n      }\n    });\n    history('/');\n  };\n  let handleSubmit = () => {\n    if (id !== 'new') updateNote();\n    history('/');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: /*#__PURE__*/_jsxDEV(ArrowLeft, {\n          onClick: handleSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), id !== 'new' ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: deleteNote,\n        children: \"delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 30\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      onChange: e => {\n        setNote({\n          ...note,\n          'body': e.target.value\n        });\n      },\n      defaultValue: note === null || note === void 0 ? void 0 : note.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(NotePage, \"MfrgX6KsiKFrW8TXv6d8XqGjPmk=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = NotePage;\nexport default NotePage;\nvar _c;\n$RefreshReg$(_c, \"NotePage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","ReactComponent","ArrowLeft","jsxDEV","_jsxDEV","NotePage","_s","id","note","setNote","history","getNote","response","fetch","ok","data","json","console","error","updateNote","method","headers","body","JSON","stringify","deleteNote","handleSubmit","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","defaultValue","_c","$RefreshReg$"],"sources":["E:/Django/reacttttt/frontend/src/pages/NotePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {  useParams,useNavigate } from 'react-router-dom';\r\nimport {ReactComponent as ArrowLeft } from '../assets/arrow-left.svg'\r\n\r\nconst NotePage = () => {\r\n    const { id } = useParams();\r\n    const [note, setNote] = useState(null);\r\n    const history = useNavigate();\r\n\r\n    useEffect(() => {\r\n        getNote();\r\n      },[]);  \r\n      \r\n      const getNote = async () => {\r\n        if(id === 'new') return \r\n        try {\r\n          const response = await fetch(`/api/notes/${id}`);\r\n          if (response.ok) {\r\n            const data = await response.json();\r\n            setNote(data);\r\n          } else {\r\n            console.error('Failed to fetch note data');\r\n          }\r\n        } catch (error) {\r\n          console.error('Error while fetching note data:', error);\r\n        }\r\n      };\r\n\r\n      let updateNote = async () => {\r\n         fetch(`/api/notes/${id}/update/`, {\r\n            method : 'PUT',\r\n            headers : {\r\n                'content-Type' : 'application/json' \r\n            },\r\n            body:JSON.stringify(note)\r\n        })\r\n      }\r\n\r\n      let deleteNote = async () => {\r\n        fetch(`/api/notes/${id}/delete/` , {\r\n          method : 'DELETE',\r\n          'headers ' : {\r\n            'content-Type' : 'application/json'\r\n          }\r\n        })\r\n        history('/');\r\n      }\r\n\r\n      let handleSubmit = () => {\r\n        if(id !=='new')\r\n        updateNote()\r\n       history('/');\r\n      }\r\n\r\n  return (\r\n    <div className='note'>\r\n        <div className='note-header'>\r\n            <h3>\r\n              <ArrowLeft onClick={handleSubmit}/>\r\n            </h3>\r\n            {id !== 'new' ? (<button onClick={deleteNote}>delete</button>):\r\n            ( <button>Done</button> )\r\n            }\r\n            \r\n        </div>\r\n        <textarea onChange={(e) => {setNote({...note,'body':e.target.value})}} defaultValue={note?.body}></textarea>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NotePage"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}